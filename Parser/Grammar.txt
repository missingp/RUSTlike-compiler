$ 产生式格式为 A ::= a B | C d ，各个符号之间用空格分开，产生式右边用 | 分割
$ $为注释行
$ @为空串，<ID>为标识符，<INT>为整数
$ 拓展文法的起始符号为S，文法的起始符号为Program
$ 使用%token ::= xx | xx | xx列出所有的终结符

%token ::= fn | let | mut | return | if | else | while | for | in | loop | break | continue | = | + | - | * | / | == | != | < | > | <= | >= | . | ( | ) | { | } | [ | ] | ; | , | : | -> | .. | <ID> | i32 | <NUM> | <INT>

$ 扩展文法产生式
S ::= Program

$ 整个程序为多个声明串的组合

Program ::= DeclList
VarDeclInner ::= mut <ID>
Type ::= i32
Assignable ::= <ID>
DeclList ::= @ | Decl DeclList
Decl ::= FunDef
FunDef ::= FunHead Block
FunHead ::= fn <ID> ( ParamList )
ParamList ::= @
Block ::= { StmtList }
StmtList ::= Stmt StmtList | @
Stmt ::= ;
Stmt ::= ReturnStmt
ReturnStmt ::= return ;
ParamList ::= Param | Param , ParamList
Param ::= VarMut <ID> : Type
VarMut ::= mut
Type ::= i32
FunHead ::= fn <ID> ( ParamList ) -> Type
ReturnStmt ::= return Exp ;
Stmt ::= Exp ;
Exp ::= AddSubExp
AddSubExp ::= Item
Item ::= Factor
Factor ::= Element
Element ::= <INT> | Assignable | ( Exp )
