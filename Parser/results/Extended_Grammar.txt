@ 终结符
fn let mut return if else while for in loop break continue = + - * / == != < > <= >= . ( ) { } [ ] ; , : -> .. <ID> i32 <NUM> <INT> # 
非终结符
S  Program  DeclList  VarDeclInner  Type  Assignable  Decl  FunDef  FunHead  Block  ParamList  StmtList  Stmt  ReturnStmt  Param  VarMut  Exp  AddSubExp  Item  Factor  Element  
语法规则
production0  S  --->  Program 
production1  Program  --->  DeclList 
production2  VarDeclInner  --->  mut <ID> 
production3  Type  --->  i32 
production4  Assignable  --->  <ID> 
production5  DeclList  --->  @ 
production6  DeclList  --->  Decl DeclList 
production7  Decl  --->  FunDef 
production8  FunDef  --->  FunHead Block 
production9  FunHead  --->  fn <ID> ( ParamList ) 
production10  ParamList  --->  @ 
production11  Block  --->  { StmtList } 
production12  StmtList  --->  Stmt StmtList 
production13  StmtList  --->  @ 
production14  Stmt  --->  ; 
production15  Stmt  --->  ReturnStmt 
production16  ReturnStmt  --->  return ; 
production17  ParamList  --->  Param 
production18  ParamList  --->  Param , ParamList 
production19  Param  --->  VarMut <ID> : Type 
production20  VarMut  --->  mut 
production21  Type  --->  i32 
production22  FunHead  --->  fn <ID> ( ParamList ) -> Type 
production23  ReturnStmt  --->  return Exp ; 
production24  Stmt  --->  Exp ; 
production25  Exp  --->  AddSubExp 
production26  AddSubExp  --->  Item 
production27  Item  --->  Factor 
production28  Factor  --->  Element 
production29  Element  --->  <INT> 
production30  Element  --->  Assignable 
production31  Element  --->  ( Exp ) 
